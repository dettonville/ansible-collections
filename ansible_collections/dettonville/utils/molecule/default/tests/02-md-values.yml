---

## testing value

- name: test-value 2-1 | add to specified file
  dettonville.utils.export_dicts:
    file: "{{ output_file_md }}"
    format: "md"
    export_list:
      - { key1: "value11", key2: "value12", key3: "value13", key4: "value14" }
      - { key1: "value21", key2: "value22", key3: "value23", key4: "value24" }
      - { key1: "value31", key2: "value32", key3: "value33", key4: "value34" }
      - { key1: "value41", key2: "value42", key3: "value43", key4: "value44" }
  register: result1

- name: Display result1
  debug:
    var: result1


- name: test-value 2-1 | read content from output file
  slurp:
    src: "{{ output_file_md }}"
  register: output_content

- name: test-value 2-1 | set expected content and get current ini file content
  set_fact:
    expected1: " | key1 | key2 | key3 | key4 | \n |--- | --- | --- | --- | \n | value11 | value12 | value13 | value14 | \n | value21 | value22 | value23 | value24 | \n | value31 | value32 | value33 | value34 | \n | value41 | value42 | value43 | value44 | \n"
    content1: "{{ output_content.content | b64decode }}"

- name: Display expected1
  debug:
    var: expected1

- name: Display content1
  debug:
    var: content1

- name: test-value 2-1 | Verify content of markdown file is as expected and export_dicts 'changed' is true
  assert:
    that:
      - result1 is changed
      - result1.message == "The markdown file has been created successfully at {{ output_file_md }}"
      - content1 == expected1


- name: test-value 2-2 | Check add option with empty string value
  dettonville.utils.export_dicts:
    file: "{{ output_file_md }}"
    format: "md"
    export_list:
      - { key1: "", key2: "value12", key3: "value13", key4: "value14" }
      - { key1: "value21", key2: "", key3: "value23", key4: "value24" }
      - { key1: "value31", key2: "value32", key3: "", key4: "value34" }
      - { key1: "value41", key2: "value42", key3: "", key4: "" }
  register: result2

- name: test-value 2-2 | read content from output file
  slurp:
    src: "{{ output_file_md }}"
  register: output_content

- name: test-value 2-2 | set expected content and get current ini file content
  set_fact:
    expected2: " | key1 | key2 | key3 | key4 | \n |--- | --- | --- | --- | \n |  | value12 | value13 | value14 | \n | value21 |  | value23 | value24 | \n | value31 | value32 |  | value34 | \n | value41 | value42 |  |  | \n"
    content2: "{{ output_content.content | b64decode }}"


- name: Display expected2
  debug:
    var: expected2

- name: Display content2
  debug:
    var: content2


- name: test-value 2-2 | Verify content of markdown file is as expected and export_dicts 'changed' is true
  assert:
    that:
      - result2 is changed
      - result2.message == "The markdown file has been created successfully at {{ output_file_md }}"
      - content2 == expected2



- name: test-value 2-3 | Check add option with encoded string values
  dettonville.utils.export_dicts:
    file: "{{ output_file_md }}"
    format: "md"
    export_list:
      - { key1: "båz", key2: "value12", key3: "value13", key4: "value14" }
      - { key1: "value21", key2: "ﬀöø", key3: "value23", key4: "value24" }
      - { key1: "value31", key2: "value32", key3: "ḃâŗ", key4: "value34" }
      - { key1: "value41", key2: "value42", key3: "ﬀöø", key4: "båz" }
  register: result3

- name: test-value 2-3 | read content from output file
  slurp:
    src: "{{ output_file_md }}"
  register: output_content

- name: test-value 2-3 | set expected content and get current ini file content
  set_fact:
    expected3: " | key1 | key2 | key3 | key4 | \n |--- | --- | --- | --- | \n | båz | value12 | value13 | value14 | \n | value21 | ﬀöø | value23 | value24 | \n | value31 | value32 | ḃâŗ | value34 | \n | value41 | value42 | ﬀöø | båz | \n"
    content3: "{{ output_content.content | b64decode }}"


- name: Display expected3
  debug:
    var: expected3

- name: Display content3
  debug:
    var: content3


- name: test-value 2-3 | Verify content of markdown file is as expected and export_dicts 'changed' is true
  assert:
    that:
      - result3 is changed
      - result3.message == "The markdown file has been created successfully at {{ output_file_md }}"
      - content3 == expected3


- name: test-value 2-4 | export to markdown with specified columns
  dettonville.utils.export_dicts:
    file: "{{ output_file_md }}"
    format: "md"
    columns:
      - { "name": "key1", "header": "Key #1" }
      - { "name": "key2", "header": "Key #2" }
      - { "name": "key3", "header": "Key #3" }
      - { "name": "key4", "header": "Key #4" }
    export_list:
      - { key1: "value11", key2: "value12", key3: "value13", key4: "value14" }
      - { key1: "value21", key2: "value22", key3: "value23", key4: "value24" }
      - { key1: "value31", key2: "value32", key3: "value33", key4: "value34" }
      - { key1: "value41", key2: "value42", key3: "value43", key4: "value44" }
  register: result4

- name: test-value 2-4 | read content from output file
  slurp:
    src: "{{ output_file_md }}"
  register: output_content

- name: test-value 2-4 | set expected content and get current ini file content
  set_fact:
    expected4: " | Key #1 | Key #2 | Key #3 | Key #4 | \n |--- | --- | --- | --- | \n | value11 | value12 | value13 | value14 | \n | value21 | value22 | value23 | value24 | \n | value31 | value32 | value33 | value34 | \n | value41 | value42 | value43 | value44 | \n"
    content4: "{{ output_content.content | b64decode }}"


- name: Display expected4
  debug:
    var: expected4

- name: Display content4
  debug:
    var: content4



- name: test-value 2-4 | Verify content of markdown file is as expected and export_dicts 'changed' is true
  assert:
    that:
      - result4 is changed
      - result4.message == "The markdown file has been created successfully at {{ output_file_md }}"
      - content4 == expected4

- name: test-value 2-5 | export to markdown where columns does not contain all columns in the provided list
  dettonville.utils.export_dicts:
    file: "{{ output_file_md }}"
    format: "md"
    columns:
      - { "name": "key1", "header": "Key #1" }
      - { "name": "key2", "header": "Key #2" }
      - { "name": "key4", "header": "Key #4" }
    export_list:
      - { key1: "value11", key2: "value12", key3: "value13", key4: "value14" }
      - { key1: "value21", key2: "value22", key3: "value23", key4: "value24" }
      - { key1: "value31", key2: "value32", key3: "value33", key4: "value34" }
      - { key1: "value41", key2: "value42", key3: "value43", key4: "value44" }
  register: result5

- name: test-value 2-5 | read content from output file
  slurp:
    src: "{{ output_file_md }}"
  register: output_content

- name: test-value 2-5 | set expected content and get current ini file content
  set_fact:
    expected5: " | Key #1 | Key #2 | Key #4 | \n |--- | --- | --- | \n | value11 | value12 | value14 | \n | value21 | value22 | value24 | \n | value31 | value32 | value34 | \n | value41 | value42 | value44 | \n"
    content5: "{{ output_content.content | b64decode }}"

- name: Display expected5
  debug:
    var: expected5

- name: Display content5
  debug:
    var: content5

- name: test-value 2-5 | Verify content of markdown file is as expected and export_dicts 'changed' is true
  assert:
    that:
      - result5 is changed
      - result5.message == "The markdown file has been created successfully at {{ output_file_md }}"
      - content5 == expected5



- name: test-value 2-6 | export to markdown with columns specifying different order
  dettonville.utils.export_dicts:
    file: "{{ output_file_md }}"
    format: "md"
    columns:
      - { "name": "key4", "header": "Key #4" }
      - { "name": "key2", "header": "Key #2" }
      - { "name": "key1", "header": "Key #1" }
      - { "name": "key3", "header": "Key #3" }
    export_list:
      - { key1: "value11", key2: "value12", key3: "value13", key4: "value14" }
      - { key1: "value21", key2: "value22", key3: "value23", key4: "value24" }
      - { key1: "value31", key2: "value32", key3: "value33", key4: "value34" }
      - { key1: "value41", key2: "value42", key3: "value43", key4: "value44" }
  register: result6

- name: test-value 2-6 | read content from output file
  slurp:
    src: "{{ output_file_md }}"
  register: output_content

- name: test-value 2-6 | set expected content and get current ini file content
  set_fact:
    expected6: " | Key #4 | Key #2 | Key #1 | Key #3 | \n |--- | --- | --- | --- | \n | value14 | value12 | value11 | value13 | \n | value24 | value22 | value21 | value23 | \n | value34 | value32 | value31 | value33 | \n | value44 | value42 | value41 | value43 | \n"
    content6: "{{ output_content.content | b64decode }}"

- name: Display expected6
  debug:
    var: expected6

- name: Display content6
  debug:
    var: content6

- name: test-value 2-6 | Verify content of markdown file is as expected and export_dicts 'changed' is true
  assert:
    that:
      - result6 is changed
      - result6.message == "The markdown file has been created successfully at {{ output_file_md }}"
      - content6 == expected6
